swagger: "2.0"
info:
  description: "Esta é a documentação da API REST desenvolvida no projeto para a seleção de Desenvolvedor Júnior."
  version: "1.0.0"
  title: "Seleção DevJr"
host: "devjr-api.herokuapp.com"
basePath: "/"
paths:
  /pessoas:
    post:
      tags:
      - "Pessoa"
      summary: "Adiciona uma pessoa."
      description: "Adiciona uma nova pessoa ao banco de dados"
      operationId: "addPessoa"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto Pessoa necessário para adicionar ao banco de dados."
        required: true
        schema:
          $ref: "#/definitions/Pessoa"
      responses:
        201:
          description: "Criado"
        405:
          description: "Entrada inválida"
    get:
      tags:
      - "Pessoa"
      summary: "Busca todas pessoas"
      description: "Retorna uma lista com todas as pessoas"
      operationId: "getAllPessoa"
      produces:
      - "application/json"
      responses:
        200:
          description: "Sucesso OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pessoa"
  /pessoas/{pessoaId}:
    get:
      tags:
      - "Pessoa"
      summary: "Busca uma pessoa pelo ID"
      description: "Retorna uma única pessoa"
      operationId: "getPessoa"
      produces:
      - "application/json"
      parameters:
      - name: "pessoaId"
        in: "path"
        description: "ID da pessoa à retornar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Sucesso OK"
          schema:
            $ref: "#/definitions/Pessoa"
        400:
          description: "ID inválido"
        404:
          description: "Pessoa não encontrada"
    put:
      tags:
      - "Pessoa"
      summary: "Atualiza uma pessoa"
      description: "Atualiza os dados de uma pessoa existente"
      operationId: "updatePessoa"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "pessoaId"
        in: "path"
        description: "ID da pessoa à atualizar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Objeto pessoa com dados atualizados"
        required: true
        schema:
          $ref: "#/definitions/Pessoa"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Pessoa não encontrada"
        405:
          description: "Entrada inválida"
    delete:
      tags:
      - "Pessoa"
      summary: "Deleta uma pessoa"
      description: "Deleta uma única pessoa identificada pelo ID"
      operationId: "deletePessoa"
      parameters:
      - name: "pessoaId"
        in: "path"
        description: "ID da pessoa à ser deletada"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Pessoa não encontrada"
  /telefones:
    post:
      tags:
      - "Telefone"
      summary: "Adiciona um telefone"
      description: "Adiciona um novo telefone ao banco de dados"
      operationId: "addTelefone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto Telefone necessário para adicionar ao banco de dados."
        required: true
        schema:
          $ref: "#/definitions/Telefone"
      responses:
        201:
          description: "Criado"
        405:
          description: "Entrada inválida"
  /telefones/{telefoneId}:
    delete:
      tags:
      - "Telefone"
      summary: "Deleta um telefone"
      description: "Deleta um único Telefone identificado pelo ID"
      operationId: "deleteTelefone"
      parameters:
      - name: "telefoneId"
        in: "path"
        description: "ID do Telefone à ser deletado"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "ID inválido"
        404:
          description: "Telefone não encontrado"
definitions:
  Telefone:
    type: "object"
    required:
    - "ddd"
    - "numero"
    - "pessoa"
    properties:
      id:
        type: "integer"
        format: "int64"
      ddd:
        type: "string"
        example: "99"
      numero:
        type: "string"
        example: "99999-9999"
      pessoa:
        $ref: "#/definitions/Pessoa"
  Pessoa:
    type: "object"
    required:
    - "nome"
    - "cpf"
    - "dataNascimento"
    - "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      nome:
        type: "string"
        example: "Fulano"
      cpf:
        type: "string"
        example: "000.000.000-00"
      dataNascimento:
        type: "string"
        example: "01/01/2001"
      email:
        type: "string"
        example: "fulano@mail.com"
      telefones:
        type: "array"
        items:
          $ref: "#/definitions/Telefone"
externalDocs:
  description: "Código-fonte disponível no Github"
  url: "https://github.com/nosered/selecao-devjr-api"